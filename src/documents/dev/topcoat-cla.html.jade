---
layout: default
title: 'Topcoat Contributor License and Distribution Agreement'
isPage: true
priority: '0.5'
---
section#content.narrow
	p#pleaseread.well
		strong PLEASE READ THIS AGREEMENT CAREFULLY.  BY SUBMITTING YOUR CONTRIBUTIONS (DEFINED BELOW) AND CLICKING {“ACCEPT”}, YOU ARE AGREEING TO BE BOUND BY ALL THE TERMS AND CONDITIONS OF THIS AGREEMENT.
	p Adobe Systems Incorporated (“Adobe”) appreciates your willingness to grant permission to use your software code checked directly into a source control system that is available by GitHub Inc (“Contributions”) in conjunction with Topcoat.  By clicking [“ACCEPT”] (“you” or “You”) hereby grant to the Adobe and to recipients of software distributed through Topcoat a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable license to use, make, have made, offer to sell, sell, import, reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute Your Contributions and such derivative works as part of Topcoat.
	p Just as we are respectful of your rights in the Contributions, we want to insure that it will not need to seek additional permission to use the Contributions from any third party.
	ul
		li You represent and warrant that you are the sole owner of the Contributions and/or have sufficient rights in your Contribution to grant all rights you grant hereunder.
		li You represent that the Contributions are your original works of authorship, that you created the Contributions and did not copy them from another source, and no other person claims, or has the right to claim, any right in any invention or patent related to the Contributions.
		li You represent that you are legally entitled to grant the above license. If your employer has rights to intellectual property that you create, you represent that you have received permission to make the Contributions on behalf of that employer, or that your employer has waived such rights for the Contributions.
		li Finally, it means that you have not entered into any agreements that would prevent you from granting the rights provided in this Agreement.
	p You understand that the decision to include the Contribution in any product or source repository is entirely that of Adobe and this agreement does not guarantee that the Contributions will be included in any product, technology or services.
	p If you become aware of any facts or circumstances related to the representation above that would make these representations inaccurate or untrue, you agree to notify Adobe promptly with any details.
	form#claform(action='http://23.23.234.18/cla/topcoat/submit.cfm', method='post')
		.control-group
			label.control-label(for='fullname') Full Name
			input#fullname(type='text', name='fullname', placeholder='Gordon Freeman')
		.control-group
			label.control-label(for='email') Email
			input#email(type='email', name='email')
		.control-group
			label.control-label(for='github_username') Github Username
			input#github_username(type='text', name='github_username')
		.control-group
			label.control-label(for='street1') Address
			input#street1(type='text', name='street1')
		.control-group
			label.control-label(for='street2')
			input#street2(type='text', name='street2')
		.control-group
			label.control-label(for='city') City
			input#city(type='text', name='city')
		.control-group
			label.control-label(for='state') State
			input#state(type='text', name='state')
		.control-group
			label.control-label(for='zip') Zip
			input#zip(type='text', name='zip')
		.control-group
			label.control-label(for='country') Country
			select#country(name='country')
				option(value='')
				option(value='Afghanistan') Afghanistan
				option(value='Åland_Islands') Åland Islands
				option(value='Albania') Albania
				option(value='Algeria') Algeria
				option(value='American_Samoa') American Samoa
				option(value='Andorra') Andorra
				option(value='Angola') Angola
				option(value='Anguilla') Anguilla
				option(value='Antarctica') Antarctica
				option(value='Antigua_And_Barbuda') Antigua and Barbuda
				option(value='Argentina') Argentina
				option(value='Armenia') Armenia
				option(value='Aruba') Aruba
				option(value='Australia') Australia
				option(value='Austria') Austria
				option(value='Azerbaijan') Azerbaijan
				option(value='Bahamas') Bahamas
				option(value='Bahrain') Bahrain
				option(value='Bangladesh') Bangladesh
				option(value='Barbados') Barbados
				option(value='Belarus') Belarus
				option(value='Belgium') Belgium
				option(value='Belize') Belize
				option(value='Benin') Benin
				option(value='Bermuda') Bermuda
				option(value='Bhutan') Bhutan
				option(value='Bolivia') Bolivia
				option(value='Bosnia_And_Herzegovina') Bosnia and Herzegovina
				option(value='Botswana') Botswana
				option(value='Bouvet_Island') Bouvet Island
				option(value='Brazil') Brazil
				option(value='British_Indian_Ocean_Territory') British Indian Ocean Territory
				option(value='Brunei_Darussalam') Brunei Darussalam
				option(value='Bulgaria') Bulgaria
				option(value='Burkina_Faso') Burkina Faso
				option(value='Burundi') Burundi
				option(value='Cambodia') Cambodia
				option(value='Cameroon') Cameroon
				option(value='Canada') Canada
				option(value='Cape_Verde') Cape Verde
				option(value='Cayman_Islands') Cayman Islands
				option(value='Central_African_Republic') Central African Republic
				option(value='Chad') Chad
				option(value='Chile') Chile
				option(value='China') China
				option(value='Christmas_Island') Christmas Island
				option(value='Cocos_(Keeling)_Islands') Cocos (Keeling) Islands
				option(value='Colombia') Colombia
				option(value='Comoros') Comoros
				option(value='Congo') Congo
				option(value='Congo,_The_Democratic_Republic_Of_The') Congo, The Democratic Republic of The
				option(value='Cook_Islands') Cook Islands
				option(value='Costa_Rica') Costa Rica
				option(value='Cote_D\'ivoire') Cote D'ivoire
				option(value='Croatia') Croatia
				option(value='Cuba') Cuba
				option(value='Cyprus') Cyprus
				option(value='Czech_Republic') Czech Republic
				option(value='Denmark') Denmark
				option(value='Djibouti') Djibouti
				option(value='Dominica') Dominica
				option(value='Dominican_Republic') Dominican Republic
				option(value='Ecuador') Ecuador
				option(value='Egypt') Egypt
				option(value='El_Salvador') El Salvador
				option(value='Equatorial_Guinea') Equatorial Guinea
				option(value='Eritrea') Eritrea
				option(value='Estonia') Estonia
				option(value='Ethiopia') Ethiopia
				option(value='Falkland_Islands_(Malvinas)') Falkland Islands (Malvinas)
				option(value='Faroe_Islands') Faroe Islands
				option(value='Fiji') Fiji
				option(value='Finland') Finland
				option(value='France') France
				option(value='French_Guiana') French Guiana
				option(value='French_Polynesia') French Polynesia
				option(value='French_Southern_Territories') French Southern Territories
				option(value='Gabon') Gabon
				option(value='Gambia') Gambia
				option(value='Georgia') Georgia
				option(value='Germany') Germany
				option(value='Ghana') Ghana
				option(value='Gibraltar') Gibraltar
				option(value='Greece') Greece
				option(value='Greenland') Greenland
				option(value='Grenada') Grenada
				option(value='Guadeloupe') Guadeloupe
				option(value='Guam') Guam
				option(value='Guatemala') Guatemala
				option(value='Guernsey') Guernsey
				option(value='Guinea') Guinea
				option(value='Guinea-bissau') Guinea-bissau
				option(value='Guyana') Guyana
				option(value='Haiti') Haiti
				option(value='Heard_Island_And_Mcdonald_Islands') Heard Island and Mcdonald Islands
				option(value='Holy_See_(Vatican_City_State)') Holy See (Vatican City State)
				option(value='Honduras') Honduras
				option(value='Hong_Kong') Hong Kong
				option(value='Hungary') Hungary
				option(value='Iceland') Iceland
				option(value='India') India
				option(value='Indonesia') Indonesia
				option(value='Iran,_Islamic_Republic_Of') Iran, Islamic Republic of
				option(value='Iraq') Iraq
				option(value='Ireland') Ireland
				option(value='Isle_Of_Man') Isle of Man
				option(value='Israel') Israel
				option(value='Italy') Italy
				option(value='Jamaica') Jamaica
				option(value='Japan') Japan
				option(value='Jersey') Jersey
				option(value='Jordan') Jordan
				option(value='Kazakhstan') Kazakhstan
				option(value='Kenya') Kenya
				option(value='Kiribati') Kiribati
				option(value='Korea,_Democratic_People\'s_Republic_Of') Korea, Democratic People's Republic of
				option(value='Korea,_Republic_Of') Korea, Republic of
				option(value='Kuwait') Kuwait
				option(value='Kyrgyzstan') Kyrgyzstan
				option(value='Lao_People\'s_Democratic_Republic') Lao People's Democratic Republic
				option(value='Latvia') Latvia
				option(value='Lebanon') Lebanon
				option(value='Lesotho') Lesotho
				option(value='Liberia') Liberia
				option(value='Libyan_Arab_Jamahiriya') Libyan Arab Jamahiriya
				option(value='Liechtenstein') Liechtenstein
				option(value='Lithuania') Lithuania
				option(value='Luxembourg') Luxembourg
				option(value='Macao') Macao
				option(value='Macedonia,_The_Former_Yugoslav_Republic_Of') Macedonia, The Former Yugoslav Republic of
				option(value='Madagascar') Madagascar
				option(value='Malawi') Malawi
				option(value='Malaysia') Malaysia
				option(value='Maldives') Maldives
				option(value='Mali') Mali
				option(value='Malta') Malta
				option(value='Marshall_Islands') Marshall Islands
				option(value='Martinique') Martinique
				option(value='Mauritania') Mauritania
				option(value='Mauritius') Mauritius
				option(value='Mayotte') Mayotte
				option(value='Mexico') Mexico
				option(value='Micronesia,_Federated_States_Of') Micronesia, Federated States of
				option(value='Moldova,_Republic_Of') Moldova, Republic of
				option(value='Monaco') Monaco
				option(value='Mongolia') Mongolia
				option(value='Montenegro') Montenegro
				option(value='Montserrat') Montserrat
				option(value='Morocco') Morocco
				option(value='Mozambique') Mozambique
				option(value='Myanmar') Myanmar
				option(value='Namibia') Namibia
				option(value='Nauru') Nauru
				option(value='Nepal') Nepal
				option(value='Netherlands') Netherlands
				option(value='Netherlands_Antilles') Netherlands Antilles
				option(value='New_Caledonia') New Caledonia
				option(value='New_Zealand') New Zealand
				option(value='Nicaragua') Nicaragua
				option(value='Niger') Niger
				option(value='Nigeria') Nigeria
				option(value='Niue') Niue
				option(value='Norfolk_Island') Norfolk Island
				option(value='Northern_Mariana_Islands') Northern Mariana Islands
				option(value='Norway') Norway
				option(value='Oman') Oman
				option(value='Pakistan') Pakistan
				option(value='Palau') Palau
				option(value='Palestinian_Territory,_Occupied') Palestinian Territory, Occupied
				option(value='Panama') Panama
				option(value='Papua_New_Guinea') Papua New Guinea
				option(value='Paraguay') Paraguay
				option(value='Peru') Peru
				option(value='Philippines') Philippines
				option(value='Pitcairn') Pitcairn
				option(value='Poland') Poland
				option(value='Portugal') Portugal
				option(value='Puerto_Rico') Puerto Rico
				option(value='Qatar') Qatar
				option(value='Reunion') Reunion
				option(value='Romania') Romania
				option(value='Russian_Federation') Russian Federation
				option(value='Rwanda') Rwanda
				option(value='Saint_Helena') Saint Helena
				option(value='Saint_Kitts_And_Nevis') Saint Kitts and Nevis
				option(value='Saint_Lucia') Saint Lucia
				option(value='Saint_Pierre_And_Miquelon') Saint Pierre and Miquelon
				option(value='Saint_Vincent_And_The_Grenadines') Saint Vincent and The Grenadines
				option(value='Samoa') Samoa
				option(value='San_Marino') San Marino
				option(value='Sao_Tome_And_Principe') Sao Tome and Principe
				option(value='Saudi_Arabia') Saudi Arabia
				option(value='Senegal') Senegal
				option(value='Serbia') Serbia
				option(value='Seychelles') Seychelles
				option(value='Sierra_Leone') Sierra Leone
				option(value='Singapore') Singapore
				option(value='Slovakia') Slovakia
				option(value='Slovenia') Slovenia
				option(value='Solomon_Islands') Solomon Islands
				option(value='Somalia') Somalia
				option(value='South_Africa') South Africa
				option(value='South_Georgia_And_The_South_Sandwich_Islands') South Georgia and The South Sandwich Islands
				option(value='Spain') Spain
				option(value='Sri_Lanka') Sri Lanka
				option(value='Sudan') Sudan
				option(value='Suriname') Suriname
				option(value='Svalbard_And_Jan_Mayen') Svalbard and Jan Mayen
				option(value='Swaziland') Swaziland
				option(value='Sweden') Sweden
				option(value='Switzerland') Switzerland
				option(value='Syrian_Arab_Republic') Syrian Arab Republic
				option(value='Taiwan,_Province_Of_China') Taiwan, Province of China
				option(value='Tajikistan') Tajikistan
				option(value='Tanzania,_United_Republic_Of') Tanzania, United Republic of
				option(value='Thailand') Thailand
				option(value='Timor-leste') Timor-leste
				option(value='Togo') Togo
				option(value='Tokelau') Tokelau
				option(value='Tonga') Tonga
				option(value='Trinidad_And_Tobago') Trinidad and Tobago
				option(value='Tunisia') Tunisia
				option(value='Turkey') Turkey
				option(value='Turkmenistan') Turkmenistan
				option(value='Turks_And_Caicos_Islands') Turks and Caicos Islands
				option(value='Tuvalu') Tuvalu
				option(value='Uganda') Uganda
				option(value='Ukraine') Ukraine
				option(value='United_Arab_Emirates') United Arab Emirates
				option(value='United_Kingdom') United Kingdom
				option(value='United_States') United States
				option(value='United_States_Minor_Outlying_Islands') United States Minor Outlying Islands
				option(value='Uruguay') Uruguay
				option(value='Uzbekistan') Uzbekistan
				option(value='Vanuatu') Vanuatu
				option(value='Venezuela') Venezuela
				option(value='Viet_Nam') Viet Nam
				option(value='Virgin_Islands,_British') Virgin Islands, British
				option(value='Virgin_Islands,_U.S.') Virgin Islands, U.S.
				option(value='Wallis_And_Futuna') Wallis and Futuna
				option(value='Western_Sahara') Western Sahara
				option(value='Yemen') Yemen
				option(value='Zambia') Zambia
				option(value='Zimbabwe') Zimbabwe
		.control-group.submit
			a.topcoat-button--cta(href="http://github.com/topcoat/topcoat") Accept
	script(src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js")
	script
		$(document).ready(function() { 
			$('.control-group.submit a.topcoat-button--cta').click(function() {  
				$(".alert").remove();
				$(".error").removeClass("error");
				$(".help-inline").remove();
				$(".add-on").remove();
				var hasError = false;
				var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
				var item;
				// full name
				item = $("#fullname").val();
				if(item == '') {
					invalid("#fullname");
					hasError = true;
				}
				// email
				item = $("#email").val();
				if(item == '') {
					invalid("#email");
					hasError = true;
				} else if(!emailReg.test(item)) {
					invalid("#email", "Invalid email address.");
					hasError = true;
				}
				// street address
				item = $("#street1").val();
				if(item == '') {
					invalid("#street1");
					hasError = true;
				}
				// city
				item = $("#city").val();
				if(item == '') {
					invalid("#city");
					hasError = true;
				}
				// state / province
				item = $("#state").val();
				if(item == '') {
					invalid("#state");
					hasError = true;
				}
				// zip
				item = $("#zip").val();
				if(item == '') {
					invalid("#zip");
					hasError = true;
				}
				// country
				item = $("#country option:selected").val();
				if(item == '') {
					invalid("#country");
					hasError = true;
				}
				if(hasError == true) {
					$("#claform").children().first().before('<div id="required" class="alert alert-error">The following fields are required.</div>');
					return false;
				} else {
					// success
					$('#claform').submit();
				}
			});
			function invalid(input, msg) {
				$(input).parents(".control-group").addClass("error");
				if(msg == undefined){msg = ""};
				$(input).after('<span class="help-inline">' + msg + '</span>');
				$(input).after("<span class='add-on'><i class='icon-exclamation-sign'></i></span>");
				return;
			}
		});